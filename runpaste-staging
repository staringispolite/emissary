#!/bin/sh

SERVER_IDS='staging'
INI_FILE="staging.ini"
GROUP=deploy
PID_PATH="/var/run/paste"
LOG_PATH="/var/log/paste"
export PYTHONPATH=/var/www-staging/emissary
export PYTHON_EGG_CACHE=/tmp/.python-eggs
export PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=cpp

case $1 in
    start)
        # start all servers
        for id in $SERVER_IDS; do
          CMD="pserve --server-name=main --app-name=main --daemon --pid-file=$PID_PATH/emissary$id.pid --log-file=$LOG_PATH/emissary$id.log $INI_FILE start server_id=$id"
          echo $CMD
          $CMD
        done
    ;;
    stop)
        # stop all servers
        for id in $SERVER_IDS; do
          CMD="pserve --server-name=main --app-name=main --daemon --pid-file=$PID_PATH/emissary$id.pid --log-file=$LOG_PATH/emissary$id.log $INI_FILE stop server_id=$id"
          echo $CMD
          $CMD
        done
    ;;
    restart)
        # restart all servers
        for id in $SERVER_IDS; do
          CMD="pserve  --server-name=main --app-name=main --daemon --pid-file=$PID_PATH/emissary$id.pid --log-file=$LOG_PATH/emissary$id.log $INI_FILE restart server_id=$id"
          echo $CMD
          $CMD
        done
    ;;
    status)
        for id in $SERVER_IDS; do
          CMD="pserve --server-name=main --app-name=main --daemon --pid-file=$PID_PATH/emissary$id.pid --log-file=$LOG_PATH/emissary$id.log $INI_FILE status server_id=$id"
          echo $CMD
          $CMD
        done
    ;;
    *)
        echo "Invalid option: $1"
    ;;
esac
